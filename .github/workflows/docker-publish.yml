name: Build and Publish Wine Base Image

on:
  push:
    branches: [ "main", "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "master" ]
  # Allow manual trigger for long builds
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # Change this to your preferred Docker Hub image name
  IMAGE_NAME: stefanmaronbc/bc-wine-base

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # Extended timeout for Wine compilation
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      # Required for attestations
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        uses: jlumbroso/free-disk-space@main
        with:
          # Remove tools we don't need for Docker builds
          tool-cache: false
          android: true
          dotnet: false
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: Cleanup Docker
        run: |
          docker system prune -f
          docker image prune -f

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.4.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=wine-{{date 'YYYYMMDD'}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Business Central on Linux base image with Wine

      - name: Export image digest
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          DIGEST="${{ steps.build-and-push.outputs.digest }}"
          MAIN_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "DIGEST=${DIGEST}" >> $GITHUB_ENV
          echo "MAIN_TAG=${MAIN_TAG}" >> $GITHUB_ENV
          echo "Image pushed successfully with digest: ${DIGEST}"

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          echo "Signing image with digest: ${DIGEST}"
          echo "Tags to sign:"
          echo "${TAGS}"
          echo "${TAGS}" | while read -r tag; do
            echo "Signing tag: ${tag}@${DIGEST}"
            cosign sign --yes "${tag}@${DIGEST}"
          done

      - name: Generate attestation for the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ env.DIGEST }}
          push-to-registry: true
